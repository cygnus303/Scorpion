.yes-no {
  display: inline-block;
  width: 46px;
  height: 18px;
  position: relative;

  &:before,
  &:after {
    color: #fff;
    font-size: 9px;
    cursor: pointer;
    z-index: 3;
    position: absolute;
    bottom: 3px;
  }

  &:before {
    content: 'YES';
    left: 4px;
  }

  &:after {
    content: 'NO';
    right: 4px;
  }

  input {
    opacity: 0;
    width: 100%;
    height: 100%;
    margin: 0;
    position: absolute;
    top: 0;
    left: 0;
    z-index: 2;
  }

  .slider {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #e02222; // ðŸ”´ default for "YES" (false)
    transition: 0.4s;
    border-radius: 0;
    z-index: 1;

    &:before {
      content: "";
      position: absolute;
      height: 16px;
      width: 22px;
      left: 1px;
      bottom: 1px;
      background-color: white;
      transition: 0.4s;
    }
  }

  input:checked + .slider {
    background-color: #4caf50; // âœ… green for true value (NO side)

    &:before {
      transform: translateX(22px); // move knob to right
    }
  }

  input:not(:checked) + .slider {
    background-color: #e02222; // ðŸ”´ red for false value

    &:before {
      transform: translateX(0); // knob on left
    }
  }
}

::ng-deep.disabled{
  opacity: 0.2;
  cursor: not-allowed !important;
   pointer-events: all !important;
}


label:has(input[type='radio'][name='ani']) {
  line-height: 1.1;
  display: grid;
  grid-template-columns: 1em auto;
  gap: 0.5em;

  > input[type='radio'].radio {
  appearance: none;
  width: 1.15em;
  height: 1.15em;
  border: 0.15em solid var(--md-sys-color-on-surface-variant);
  border-radius: 50%;
  display: grid;
  place-content: center;
  position: relative;

  &::before {
    content: "";
    width: 0.58em;
    height: 0.58em;
    border-radius: 50%;
    transform: scale(0);
    transition: 120ms transform ease-in-out;
    background-color: transparent; // no background by default
  }

  &:checked {
    border-color: #d4d4d4; // Bootstrap blue or any other color

    &::before {
      transform: scale(1);
      background-color: #a1a1a1; // <== This is the color of the inner dot
    }
  }
}

}
